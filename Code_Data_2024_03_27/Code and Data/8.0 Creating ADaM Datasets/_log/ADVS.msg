[1] "Error: 'data/abc/ADaM//adsl.csv' does not exist in current working directory ('/cloud/project/Lab_Work/8.0 Creating ADaM Datasets').\n"
Traceback: 
 [1] "10: stop(\"'\", path, \"' does not exist\", if (!is_absolute_path(path)) {"                       
 [2] "        paste0(\" in current working directory ('\", getwd(), \"')\")"                            
 [3] "    }, \".\", call. = FALSE)"                                                                     
 [4] "9: check_path(path)"                                                                              
 [5] "8: (function (path, write = FALSE) "                                                              
 [6] "   {"                                                                                             
 [7] "       if (is.raw(path)) {"                                                                       
 [8] "           return(rawConnection(path, \"rb\"))"                                                   
 [9] "       }"                                                                                         
[10] "       if (!is.character(path)) {"                                                                
[11] "           return(path)"                                                                          
[12] "       }"                                                                                         
[13] "       if (is_url(path)) {"                                                                       
[14] "           if (requireNamespace(\"curl\", quietly = TRUE)) {"                                     
[15] "               con <- curl::curl(path)"                                                           
[16] "           }"                                                                                     
[17] "           else {"                                                                                
[18] "               rlang::inform(\"`curl` package not installed, falling back to using `url()`\")"    
[19] "               con <- url(path)"                                                                  
[20] "           }"                                                                                     
[21] "           ext <- tolower(tools::file_ext(path))"                                                 
[22] "           return(switch(ext, zip = , bz2 = , xz = {"                                             
[23] "               close(con)"                                                                        
[24] "               stop(\"Reading from remote `\", ext, \"` compressed files is not supported,\\n\", "
[25] "     ..."                                                                                         
[26] "7: vroom_(file, delim = delim %||% col_types$delim, col_names = col_names, "                      
[27] "       col_types = col_types, id = id, skip = skip, col_select = col_select, "                    
[28] "       name_repair = .name_repair, na = na, quote = quote, trim_ws = trim_ws, "                   
[29] "       escape_double = escape_double, escape_backslash = escape_backslash, "                      
[30] "       comment = comment, skip_empty_rows = skip_empty_rows, locale = locale, "                   
[31] "       guess_max = guess_max, n_max = n_max, altrep = vroom_altrep(altrep), "                     
[32] "       num_threads = num_threads, progress = progress)"                                           
[33] "6: vroom::vroom(file, delim = \",\", col_names = col_names, col_types = col_types, "              
[34] "       col_select = {"                                                                            
[35] "           {"                                                                                     
[36] "               col_select"                                                                        
[37] "           }"                                                                                     
[38] "       }, id = id, .name_repair = name_repair, skip = skip, n_max = n_max, "                      
[39] "       na = na, quote = quote, comment = comment, skip_empty_rows = skip_empty_rows, "            
[40] "       trim_ws = trim_ws, escape_double = TRUE, escape_backslash = FALSE, "                       
[41] "       locale = locale, guess_max = guess_max, show_col_types = show_col_types, "                 
[42] "       progress = progress, altrep = lazy, num_threads = num_threads)"                            
[43] "5: read_csv(file.path(ADaM_path, \"adsl.csv\"))"                                                  
[44] "4: mutate(., TRTSDT = dmy(TRTSDT), TRTEDT = dmy(TRTEDT))"                                         
[45] "3: log_select(.data, .fun = dplyr::select, .funname = \"select\", "                               
[46] "       ...)"                                                                                      
[47] "2: select(., STUDYID, USUBJID, SUBJID, SITEID, TRT01P, TRT01PN, "                                 
[48] "       TRT01A, TRT01AN, RANDFL, SAFFL, MITTFL, PPROTFL, TRTSDT, "                                 
[49] "       TRTEDT)"                                                                                   
[50] "1: read_csv(file.path(ADaM_path, \"adsl.csv\")) %>% mutate(TRTSDT = dmy(TRTSDT), "                
[51] "       TRTEDT = dmy(TRTEDT)) %>% select(STUDYID, USUBJID, SUBJID, "                               
[52] "       SITEID, TRT01P, TRT01PN, TRT01A, TRT01AN, RANDFL, SAFFL, "                                 
[53] "       MITTFL, PPROTFL, TRTSDT, TRTEDT)"                                                          

[1] "Error: 'data/abc/SDTM//vs.csv' does not exist in current working directory ('/cloud/project/Lab_Work/8.0 Creating ADaM Datasets').\n"
Traceback: 
 [1] "10: stop(\"'\", path, \"' does not exist\", if (!is_absolute_path(path)) {"                       
 [2] "        paste0(\" in current working directory ('\", getwd(), \"')\")"                            
 [3] "    }, \".\", call. = FALSE)"                                                                     
 [4] "9: check_path(path)"                                                                              
 [5] "8: (function (path, write = FALSE) "                                                              
 [6] "   {"                                                                                             
 [7] "       if (is.raw(path)) {"                                                                       
 [8] "           return(rawConnection(path, \"rb\"))"                                                   
 [9] "       }"                                                                                         
[10] "       if (!is.character(path)) {"                                                                
[11] "           return(path)"                                                                          
[12] "       }"                                                                                         
[13] "       if (is_url(path)) {"                                                                       
[14] "           if (requireNamespace(\"curl\", quietly = TRUE)) {"                                     
[15] "               con <- curl::curl(path)"                                                           
[16] "           }"                                                                                     
[17] "           else {"                                                                                
[18] "               rlang::inform(\"`curl` package not installed, falling back to using `url()`\")"    
[19] "               con <- url(path)"                                                                  
[20] "           }"                                                                                     
[21] "           ext <- tolower(tools::file_ext(path))"                                                 
[22] "           return(switch(ext, zip = , bz2 = , xz = {"                                             
[23] "               close(con)"                                                                        
[24] "               stop(\"Reading from remote `\", ext, \"` compressed files is not supported,\\n\", "
[25] "     ..."                                                                                         
[26] "7: vroom_(file, delim = delim %||% col_types$delim, col_names = col_names, "                      
[27] "       col_types = col_types, id = id, skip = skip, col_select = col_select, "                    
[28] "       name_repair = .name_repair, na = na, quote = quote, trim_ws = trim_ws, "                   
[29] "       escape_double = escape_double, escape_backslash = escape_backslash, "                      
[30] "       comment = comment, skip_empty_rows = skip_empty_rows, locale = locale, "                   
[31] "       guess_max = guess_max, n_max = n_max, altrep = vroom_altrep(altrep), "                     
[32] "       num_threads = num_threads, progress = progress)"                                           
[33] "6: vroom::vroom(file, delim = \",\", col_names = col_names, col_types = col_types, "              
[34] "       col_select = {"                                                                            
[35] "           {"                                                                                     
[36] "               col_select"                                                                        
[37] "           }"                                                                                     
[38] "       }, id = id, .name_repair = name_repair, skip = skip, n_max = n_max, "                      
[39] "       na = na, quote = quote, comment = comment, skip_empty_rows = skip_empty_rows, "            
[40] "       trim_ws = trim_ws, escape_double = TRUE, escape_backslash = FALSE, "                       
[41] "       locale = locale, guess_max = guess_max, show_col_types = show_col_types, "                 
[42] "       progress = progress, altrep = lazy, num_threads = num_threads)"                            
[43] "5: read_csv(file.path(SDTM_path, \"vs.csv\"))"                                                    
[44] "4: log_rename(.data, .fun = dplyr::rename, .funname = \"rename\", "                               
[45] "       ...)"                                                                                      
[46] "3: rename(., SRCSEQ = VSSEQ, ADTC = VSDTC)"                                                       
[47] "2: mutate(., VSSTRESC = as.character(VSSTRESC), SRCDOM = \"VS\", SRCVAR = \"VSSTRESN\")"          
[48] "1: read_csv(file.path(SDTM_path, \"vs.csv\")) %>% rename(SRCSEQ = VSSEQ, "                        
[49] "       ADTC = VSDTC) %>% mutate(VSSTRESC = as.character(VSSTRESC), "                              
[50] "       SRCDOM = \"VS\", SRCVAR = \"VSSTRESN\")"                                                   

Error in .fun(.data, ...) : object 'vs' not found
 
Traceback: 
 [1] "13: .fun(.data, ...)"                                                                                   
 [2] "12: log_filter(.data, .fun = dplyr::filter, .funname = \"filter\", "                                    
 [3] "        ...)"                                                                                           
 [4] "11: filter(., VSTESTCD == \"HEIGHT\" | VSTESTCD == \"WEIGHT\")"                                         
 [5] "10: .fun(.data, ...)"                                                                                   
 [6] "9: log_longer_wider(data, .fun = tidyr::pivot_wider, .funname = \"pivot_wider\", "                      
 [7] "       ...)"                                                                                            
 [8] "8: pivot_wider(., id_cols = c(STUDYID, DOMAIN, USUBJID, VISITNUM, "                                     
 [9] "       VISIT, ADTC, VSDY), names_from = VSTESTCD, values_from = VSORRES)"                               
[10] "7: .fun(.data, ...)"                                                                                    
[11] "6: log_filter(.data, .fun = dplyr::filter, .funname = \"filter\", "                                     
[12] "       ...)"                                                                                            
[13] "5: filter(., !is.na(HEIGHT) & !is.na(WEIGHT))"                                                          
[14] "4: mutate(., SRCSEQ = as.numeric(NA), VSPOS = as.character(NA), "                                       
[15] "       VSORRESU = as.character(NA), VSSTRESU = as.character(NA), "                                      
[16] "       VSBLFL = as.character(NA), VSTESTCD = \"BMI\", VSTEST = \"Body Mass Index\", "                   
[17] "       VSORRES = round(WEIGHT/((HEIGHT/100)^2), digits = 1), VSSTRESN = round(WEIGHT/((HEIGHT/100)^2), "
[18] "           digits = 1), VSSTRESC = as.character(VSORRES), SRCDOM = as.character(NA), "                  
[19] "       SRCVAR = as.character(NA))"                                                                      
[20] "3: log_select(.data, .fun = dplyr::select, .funname = \"select\", "                                     
[21] "       ...)"                                                                                            
[22] "2: select(., STUDYID, DOMAIN, USUBJID, SRCDOM, SRCVAR, SRCSEQ, VSTESTCD, "                              
[23] "       VSTEST, VSPOS, VSORRES, VSORRESU, VSSTRESC, VSSTRESN, VSSTRESU, "                                
[24] "       VSBLFL, VISITNUM, VISIT, ADTC, VSDY)"                                                            
[25] "1: vs %>% filter(VSTESTCD == \"HEIGHT\" | VSTESTCD == \"WEIGHT\") %>% "                                 
[26] "       pivot_wider(id_cols = c(STUDYID, DOMAIN, USUBJID, VISITNUM, "                                    
[27] "           VISIT, ADTC, VSDY), names_from = VSTESTCD, values_from = VSORRES) %>% "                      
[28] "       filter(!is.na(HEIGHT) & !is.na(WEIGHT)) %>% mutate(SRCSEQ = as.numeric(NA), "                    
[29] "       VSPOS = as.character(NA), VSORRESU = as.character(NA), VSSTRESU = as.character(NA), "            
[30] "       VSBLFL = as.character(NA), VSTESTCD = \"BMI\", VSTEST = \"Body Mass Index\", "                   
[31] "       VSORRES = round(WEIGHT/((HEIGHT/100)^2), digits = 1), VSSTRESN = round(WEIGHT/((HEIGHT/100)^2), "
[32] "           digits = 1), VSSTRESC = as.character(VSORRES), SRCDOM = as.character(NA), "                  
[33] "       SRCVAR = as.character(NA)) %>% select(STUDYID, DOMAIN, USUBJID, "                                
[34] "       SRCDOM, SRCVAR, SRCSEQ, VSTESTCD, VSTEST, VSPOS, VSORRES, "                                      
[35] "       VSORRESU, VSSTRESC, VSSTRESN, VSSTRESU, VSBLFL, VISITNUM, "                                      
[36] "       VISIT, ADTC, VSDY)"                                                                              

[1] "Error: 'data/abc/SDTM//pe.csv' does not exist in current working directory ('/cloud/project/Lab_Work/8.0 Creating ADaM Datasets').\n"
Traceback: 
 [1] "15: stop(\"'\", path, \"' does not exist\", if (!is_absolute_path(path)) {"                        
 [2] "        paste0(\" in current working directory ('\", getwd(), \"')\")"                             
 [3] "    }, \".\", call. = FALSE)"                                                                      
 [4] "14: check_path(path)"                                                                              
 [5] "13: (function (path, write = FALSE) "                                                              
 [6] "    {"                                                                                             
 [7] "        if (is.raw(path)) {"                                                                       
 [8] "            return(rawConnection(path, \"rb\"))"                                                   
 [9] "        }"                                                                                         
[10] "        if (!is.character(path)) {"                                                                
[11] "            return(path)"                                                                          
[12] "        }"                                                                                         
[13] "        if (is_url(path)) {"                                                                       
[14] "            if (requireNamespace(\"curl\", quietly = TRUE)) {"                                     
[15] "                con <- curl::curl(path)"                                                           
[16] "            }"                                                                                     
[17] "            else {"                                                                                
[18] "                rlang::inform(\"`curl` package not installed, falling back to using `url()`\")"    
[19] "                con <- url(path)"                                                                  
[20] "            }"                                                                                     
[21] "            ext <- tolower(tools::file_ext(path))"                                                 
[22] "            return(switch(ext, zip = , bz2 = , xz = {"                                             
[23] "                close(con)"                                                                        
[24] "                stop(\"Reading from remote `\", ext, \"` compressed files is not supported,\\n\", "
[25] "      ..."                                                                                         
[26] "12: vroom_(file, delim = delim %||% col_types$delim, col_names = col_names, "                      
[27] "        col_types = col_types, id = id, skip = skip, col_select = col_select, "                    
[28] "        name_repair = .name_repair, na = na, quote = quote, trim_ws = trim_ws, "                   
[29] "        escape_double = escape_double, escape_backslash = escape_backslash, "                      
[30] "        comment = comment, skip_empty_rows = skip_empty_rows, locale = locale, "                   
[31] "        guess_max = guess_max, n_max = n_max, altrep = vroom_altrep(altrep), "                     
[32] "        num_threads = num_threads, progress = progress)"                                           
[33] "11: vroom::vroom(file, delim = \",\", col_names = col_names, col_types = col_types, "              
[34] "        col_select = {"                                                                            
[35] "            {"                                                                                     
[36] "                col_select"                                                                        
[37] "            }"                                                                                     
[38] "        }, id = id, .name_repair = name_repair, skip = skip, n_max = n_max, "                      
[39] "        na = na, quote = quote, comment = comment, skip_empty_rows = skip_empty_rows, "            
[40] "        trim_ws = trim_ws, escape_double = TRUE, escape_backslash = FALSE, "                       
[41] "        locale = locale, guess_max = guess_max, show_col_types = show_col_types, "                 
[42] "        progress = progress, altrep = lazy, num_threads = num_threads)"                            
[43] "10: read_csv(file.path(SDTM_path, \"pe.csv\"))"                                                    
[44] "9: .fun(.data, ...)"                                                                               
[45] "8: log_filter(.data, .fun = dplyr::filter, .funname = \"filter\", "                                
[46] "       ...)"                                                                                       
[47] "7: filter(., PETESTCD == \"PCTBSA\")"                                                              
[48] "6: log_rename(.data, .fun = dplyr::rename, .funname = \"rename\", "                                
[49] "       ...)"                                                                                       
[50] "5: rename(., SRCSEQ = PESEQ, VSTESTCD = PETESTCD, VSTEST = PETEST, "                               
[51] "       VSORRES = PEORRES, VSORRESU = PEORRESU, VSSTRESC = PESTRESC, "                              
[52] "       VSSTRESN = PESTRESN, VSSTRESU = PESTRESU, ADTC = PEDTC, VSDY = PEDY)"                       
[53] "4: mutate(., VSORRES = as.numeric(VSORRES), SRCDOM = \"PE\", SRCVAR = \"PESTRESN\")"               
[54] "3: log_select(.data, .fun = dplyr::select, .funname = \"select\", "                                
[55] "       ...)"                                                                                       
[56] "2: select(., -PECAT, -PESTAT)"                                                                     
[57] "1: read_csv(file.path(SDTM_path, \"pe.csv\")) %>% filter(PETESTCD == "                             
[58] "       \"PCTBSA\") %>% rename(SRCSEQ = PESEQ, VSTESTCD = PETESTCD, "                               
[59] "       VSTEST = PETEST, VSORRES = PEORRES, VSORRESU = PEORRESU, "                                  
[60] "       VSSTRESC = PESTRESC, VSSTRESN = PESTRESN, VSSTRESU = PESTRESU, "                            
[61] "       ADTC = PEDTC, VSDY = PEDY) %>% mutate(VSORRES = as.numeric(VSORRES), "                      
[62] "       SRCDOM = \"PE\", SRCVAR = \"PESTRESN\") %>% select(-PECAT, -PESTAT)"                        

[1] "Error: 'data/abc/ADaM/advs.csv' does not exist in current working directory ('/cloud/project/Lab_Work/8.0 Creating ADaM Datasets').\n"
Traceback: 
 [1] "12: stop(\"'\", path, \"' does not exist\", if (!is_absolute_path(path)) {"                        
 [2] "        paste0(\" in current working directory ('\", getwd(), \"')\")"                             
 [3] "    }, \".\", call. = FALSE)"                                                                      
 [4] "11: check_path(path)"                                                                              
 [5] "10: (function (path, write = FALSE) "                                                              
 [6] "    {"                                                                                             
 [7] "        if (is.raw(path)) {"                                                                       
 [8] "            return(rawConnection(path, \"rb\"))"                                                   
 [9] "        }"                                                                                         
[10] "        if (!is.character(path)) {"                                                                
[11] "            return(path)"                                                                          
[12] "        }"                                                                                         
[13] "        if (is_url(path)) {"                                                                       
[14] "            if (requireNamespace(\"curl\", quietly = TRUE)) {"                                     
[15] "                con <- curl::curl(path)"                                                           
[16] "            }"                                                                                     
[17] "            else {"                                                                                
[18] "                rlang::inform(\"`curl` package not installed, falling back to using `url()`\")"    
[19] "                con <- url(path)"                                                                  
[20] "            }"                                                                                     
[21] "            ext <- tolower(tools::file_ext(path))"                                                 
[22] "            return(switch(ext, zip = , bz2 = , xz = {"                                             
[23] "                close(con)"                                                                        
[24] "                stop(\"Reading from remote `\", ext, \"` compressed files is not supported,\\n\", "
[25] "      ..."                                                                                         
[26] "9: vroom_(file, delim = delim %||% col_types$delim, col_names = col_names, "                       
[27] "       col_types = col_types, id = id, skip = skip, col_select = col_select, "                     
[28] "       name_repair = .name_repair, na = na, quote = quote, trim_ws = trim_ws, "                    
[29] "       escape_double = escape_double, escape_backslash = escape_backslash, "                       
[30] "       comment = comment, skip_empty_rows = skip_empty_rows, locale = locale, "                    
[31] "       guess_max = guess_max, n_max = n_max, altrep = vroom_altrep(altrep), "                      
[32] "       num_threads = num_threads, progress = progress)"                                            
[33] "8: vroom::vroom(file, delim = \",\", col_names = col_names, col_types = col_types, "               
[34] "       col_select = {"                                                                             
[35] "           {"                                                                                      
[36] "               col_select"                                                                         
[37] "           }"                                                                                      
[38] "       }, id = id, .name_repair = name_repair, skip = skip, n_max = n_max, "                       
[39] "       na = na, quote = quote, comment = comment, skip_empty_rows = skip_empty_rows, "             
[40] "       trim_ws = trim_ws, escape_double = TRUE, escape_backslash = FALSE, "                        
[41] "       locale = locale, guess_max = guess_max, show_col_types = show_col_types, "                  
[42] "       progress = progress, altrep = lazy, num_threads = num_threads)"                             
[43] "7: read_csv(qc_advsf)"                                                                             
[44] "6: mutate(., TRTSDT = dmy(TRTSDT), TRTEDT = dmy(TRTEDT), ADT = dmy(ADT), "                         
[45] "       ADTF = as.character(ADTF))"                                                                 
[46] "5: arrange(., USUBJID, PARAMCD, SRCSEQ)"                                                           
[47] "4: print(x, ...)"                                                                                  
[48] "3: log_print(x, ..., console = console, blank_after = blank_after, "                               
[49] "       msg = msg, hide_notes = hide_notes)"                                                        
[50] "2: put(.)"                                                                                         
[51] "1: read_csv(qc_advsf) %>% mutate(TRTSDT = dmy(TRTSDT), TRTEDT = dmy(TRTEDT), "                     
[52] "       ADT = dmy(ADT), ADTF = as.character(ADTF)) %>% arrange(USUBJID, "                           
[53] "       PARAMCD, SRCSEQ) %>% put()"                                                                 

Warning message:
One or more parsing issues, see `problems()` for details

